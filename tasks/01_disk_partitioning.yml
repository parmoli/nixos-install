---
# Unmount eventual mounted partition
- name: Close encrypted partition
  ansible.builtin.shell: |
    vgremove -f lvm
    echo {{ encryption_passphrase }} | cryptsetup close cryptroot
  ignore_errors: yes

- name: Try to unmount all target device partitions. Ignore erros if already unmounted
  ansible.builtin.shell: umount -qR /mnt
  ignore_errors: yes

- name: Desactivate swap on swap_partition if enabled
  ansible.builtin.shell: swapoff -a
  ignore_errors: yes

# Create partitions on target drive
- name: Format the drive using gpt partition table
  ansible.builtin.shell: parted -s {{ target_device }} mklabel gpt

- name: Create EFI partition (1GB) and set boot flag
  ansible.builtin.shell: |
    parted -s {{ target_device }} mkpart "EFI" fat32 1MiB 1Gib
    parted -s {{ target_device }} set 1 esp on

- name: Create root partition
  ansible.builtin.shell: parted -s {{ target_device }}  mkpart "luks" 17Gib 100%

# Get partition names
- name: List partitions on target device
  ansible.builtin.shell: lsblk {{ target_device }} -ln -o name -x name
  register: partition_output

- name: Split the results in a table
  ansible.builtin.set_fact:
    partition_output_table: "{{ partition_output.stdout| split('\n') }}"

- name: Save partition names
  ansible.builtin.set_fact:
    boot_partition: "/dev/{{ partition_output_table[1] }}"
    root_partition: "/dev/{{ partition_output_table[2] }}"

# Encrypt root partition
- name: Encrypt root partition
  ansible.builtin.shell: |
    echo {{ encryption_passphrase }} | cryptsetup -v --type luks2 luksFormat --label xroot {{ root_partition }}
  ignore_errors: yes

- name: Open encrypted partition
  ansible.builtin.shell: |
    echo {{ encryption_passphrase }} | cryptsetup open {{ root_partition }} cryptroot

# Setup lvm on the encrypted partition to create swap and root subpartitions
- name: Create logical volume on top of encrypted root partition
  ansible.builtin.shell: |
    pvcreate /dev/mapper/cryptroot
    vgcreate lvm /dev/mapper/cryptroot

- name: Create swap and root logical partitions inside the logical volume
  ansible.builtin.shell: |
    lvcreate --size 24G --name swap lvm
    lvcreate --extents 100%FREE --name root lvm

# Format partitions
- name: Format partitions
  ansible.builtin.shell: |
    mkfs.fat -F 32 -n EFI {{ boot_partition }}
    mkswap /dev/lvm/swap
    mkfs.btrfs --force /dev/lvm/root

# Enable swap
- name: Enable swap
  ansible.builtin.shell: swapon /dev/lvm/swap
